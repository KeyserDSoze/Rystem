name: Deploy Rystem Docs to GitHub Pages

on:
  push:
    branches: [ master ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: rystemapp/package-lock.json

      - name: Install dependencies
        working-directory: ./rystemapp
        run: npm ci

      - name: Build documentation index
        working-directory: ./rystemapp
        run: npm run build-docs

      - name: Build MCP manifest
        working-directory: ./rystemapp
        run: npm run build-mcp

      - name: Build application
        working-directory: ./rystemapp
        run: npm run build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./rystemapp/dist

  deploy-pages:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  deploy-vercel:
    runs-on: ubuntu-latest
    needs: build
    environment: Rystem.Nuget
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    steps:
      - uses: actions/checkout@v2
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: rystemapp/package-lock.json

      - name: Install dependencies
        working-directory: ./rystemapp
        run: npm ci

      - name: Build project
        working-directory: ./rystemapp
        run: npm run build

      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        working-directory: ./rystemapp
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy to Vercel
        working-directory: ./rystemapp
        run: vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN }}
